var opinionsCards,opinionsProgressDots,opinionsBtnRight,opinionsBtnLeft,opinionsBtns,opinionsSlider,main2=function(){prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=function(){opinionsCards=document.querySelectorAll(".opinions__card"),opinionsProgressDots=document.querySelectorAll(".opinions__progress-dot"),opinionsBtnLeft=document.querySelector(".opinions__btn--left"),opinionsBtnRight=document.querySelector(".opinions__btn--right"),opinionsBtns=document.querySelectorAll(".opinions__btn"),opinionsSlider=document.querySelector(".opinions__slider")},prepareDOMEvents=function(){opinionsBtns.forEach(function(n){n.classList.contains("opinions__btn--left")?n.addEventListener("click",handleOpinionLeftSlider):n.addEventListener("click",handleOpinionRightSlider)}),handleOpinionsDot()},handleOpinionLeftSlider=function(){handleActiveCard("left",-1)},handleOpinionRightSlider=function(){handleActiveCard("right",1)},handleOpinionsDot=function(){opinionsProgressDots.forEach(function(o){o.addEventListener("click",function(){var n=parseInt(o.dataset.cardNumber),i=document.querySelector(".opinions__card--active"),n=n-parseInt(i.dataset.cardNumber);0!=n&&handleActiveCard(0<n?"right":"left",Math.abs(n))})})},handleActiveCard=function(n,i){var o=Array.from(opinionsCards).find(function(n){return n.classList.contains("opinions__card--active")}),e=o.dataset.cardNumber,t=(o.classList.remove("opinions__card--active"),parseInt(e)+i),o=320*((t=(t=3<t?1:t)<1?3:t)-1);opinionsSlider.style.transform="translateX(-".concat(o,"px)"),Array.from(opinionsCards).find(function(n){return parseInt(n.dataset.cardNumber)===t}).classList.add("opinions__card--active"),Array.from(opinionsProgressDots).find(function(n){return parseInt(n.dataset.cardNumber)===parseInt(e)}).classList.remove("opinions__progress-dot--active"),Array.from(opinionsProgressDots).find(function(n){return parseInt(n.dataset.cardNumber)===t}).classList.add("opinions__progress-dot--active")};document.addEventListener("DOMContentLoaded",main2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxhbmRpbmdQYWdlLmpzIl0sIm5hbWVzIjpbIm9waW5pb25zQ2FyZHMiLCJvcGluaW9uc1Byb2dyZXNzRG90cyIsIm9waW5pb25zQnRuUmlnaHQiLCJvcGluaW9uc0J0bkxlZnQiLCJvcGluaW9uc1NsaWRlciIsInByZXBhcmVET01FbGVtZW50cyIsInByZXBhcmVET01FdmVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJxdWVyeVNlbGVjdG9yIiwib3BpbmlvbnNCdG5zIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJidG4iLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlT3BpbmlvbkxlZnRTbGlkZXIiLCJoYW5kbGVPcGluaW9uUmlnaHRTbGlkZXIiLCJoYW5kbGVPcGluaW9uc0RvdCIsImhhbmRsZUFjdGl2ZUNhcmQiLCJmb3JFYWNoIiwiY3VycmVudE51bWJlciIsInBhcnNlSW50IiwiZG90IiwidGFyZ2V0TnVtYmVyIiwiZGF0YXNldCIsImNhcmROdW1iZXIiLCJkaWZmIiwiYWN0aXZlQ2FyZCIsImRpcmVjdGlvbiIsInZhbHVlIiwibmV3Q2FyZE51bWJlciIsImFjdGl2ZUNhcmREYXRhc2V0IiwiZnJvbSIsImZpbmQiLCJjYXJkIiwicmVtb3ZlIiwib2Zmc2V0Iiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJjb25jYXQiLCJBcnJheSIsImFkZCIsIm1haW4yIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxjQUNBQyxxQkFEQUQsaUJBQ0FDLGdCQUNBQyxhQUNBQyxlQUVBQyxNQUFBQSxXQUVKQyxtQkFBYyxFQUViQyxpQkFEQUQsQ0FFRCxFQUVNQSxtQkFBcUIsV0FDMUJMLGNBQWFPLFNBQVdDLGlCQUFpQixpQkFBQyxFQUMxQ1AscUJBQW9CTSxTQUFXQyxpQkFBaUIseUJBQUMsRUFDakRMLGdCQUFlSSxTQUFXRSxjQUFjLHNCQUFDLEVBQ3pDUCxpQkFBZ0JLLFNBQVdFLGNBQWMsdUJBQUMsRUFDMUNDLGFBQVlILFNBQVdDLGlCQUFpQixnQkFBQyxFQUN6Q0osZUFBY0csU0FBV0UsY0FBYyxtQkFBQyxDQUN6QyxFQUdDQyxpQkFBcUIsV0FBckJBLGFBQ1NDLFFBQVVDLFNBQUFBLEdBQ2pCQyxFQUFJQyxVQUFBQSxTQUFpQixxQkFBU0MsRUFBOUJGLEVBQ0FDLGlCQUFNLFFBQUFDLHVCQUFBLEVBQ05GLEVBQ0RDLGlCQUFBLFFBQUFFLHdCQUFBLENBQ0QsQ0FDQUMsRUFDQUEsa0JBQUEsQ0FFRCxFQUVDRix3QkFBQSxXQUVERyxpQkFBTUYsT0FBQUEsQ0FBQUEsQ0FBd0IsQ0FGOUIsRUFNTUMseUJBQUFBLFdBSExDLGlCQUlBakIsUUFBcUJrQixDQUFBQSxDQUh0QixFQU1HRixrQkFBbUJWLFdBSHJCTixxQkFJUW1CLFFBQWdCQyxTQUFBQSxHQUh2QkMsRUFJQ1IsaUJBQWFTLFFBQWVILFdBSDVCLElBS0FHLEVBQWdCRixTQUFBQyxFQUFBRSxRQUFBQyxVQUFBLEVBQ2ZQLEVBQUFBLFNBQXFCVCxjQUFjLHlCQUEwQixFQUU3RGlCLEVBQUFILEVBRERGLFNBQUFNLEVBQUFILFFBQUFDLFVBQUEsRUFHRixHQUFBQyxHQUVLUixpQkFBbUIsRUFBSFEsRUFBaEJSLFFBQUFBLE9BQW9CVSxLQUFBQSxJQUFTRixDQUFFRyxDQUFBQSxDQUpuQyxDQUFDLENBQ0YsQ0FJeUcsQ0FIMUcsRUFRS0MsaUJBQWdCVCxTQUFBQSxFQUFTVSxHQUw3QixJQU9BSixFQUFJRyxNQUFpQkUsS0FBRUYsYUFBaUIsRUFBQUcsS0FBQSxTQUFBQyxHQUFBLE9BQUFBLEVBQUF2QixVQUFBQyxTQUFBLHdCQUFBLENBQUEsQ0FBQSxFQUxsQ21CLEVBQW9CSixFQUFXSCxRQUFRQyxXQVU3Q0ssR0FUQUgsRUFPQWhCLFVBQUF3QixPQUFBLHdCQUFBLEVBRUFkLFNBQUFVLENBQUEsRUFBQUYsR0FXSU8sRUFBeUJYLE1BZk5LLEdBTXZCQSxFQUFBLEVBQUFBLEVBQUEsRUFOSUEsR0FBZ0IsRUFBbUIsRUFlL0JULEdBQXFCSSxHQU43QnJCLGVBT0NpQyxNQUFBQyxVQUFBLGVBQUFDLE9BQUFILEVBQUEsS0FBQSxFQUdvQkksTUFBTVIsS0FBSy9CLGFBQUFBLEVBQUFBLEtBQXNCZ0MsU0FBQUEsR0FBSSxPQUFDWixTQUFBQyxFQUFHRSxRQUFBQyxVQUFBLElBQUFLLENBQUEsQ0FBQSxFQUFJVCxVQUFhRyxJQUFBQSx3QkFBd0JNLEVBQzFGbkIsTUFBVThCLEtBQUl4QyxvQkFBQSxFQUFBZ0MsS0FDM0IsU0FBQVgsR0FBQSxPQUFBRCxTQUFBQyxFQUFBRSxRQUFBQyxVQUFBLElBQUFKLFNBQUFVLENBQUEsQ0FBQSxDQUVEeEIsRUFOV0ksVUFBVXdCLE9BQU8sZ0NBQWdDLEVBRXRDSyxNQUFNUixLQUFLL0Isb0JBQW9CLEVBQUVnQyxLQUFLLFNBQUFYLEdBQUcsT0FBSUQsU0FBU0MsRUFBSUUsUUFBUUMsVUFBVSxJQUFNSyxDQUFhLENBQUEsRUFDdkduQixVQUFVOEIsSUFBSSxnQ0FBZ0MsQ0FDNUQsRUFFQWxDLFNBQVNPLGlCQUFpQixtQkFBb0I0QixLQUFLIiwiZmlsZSI6ImxhbmRpbmdQYWdlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBvcGluaW9uc0NhcmRzXHJcbmxldCBvcGluaW9uc1Byb2dyZXNzRG90c1xyXG5sZXQgb3BpbmlvbnNCdG5SaWdodFxyXG5sZXQgb3BpbmlvbnNCdG5MZWZ0XHJcbmxldCBvcGluaW9uc0J0bnNcclxubGV0IG9waW5pb25zU2xpZGVyXHJcblxyXG5jb25zdCBtYWluMiA9ICgpID0+IHtcclxuXHRwcmVwYXJlRE9NRWxlbWVudHMoKVxyXG5cdHByZXBhcmVET01FdmVudHMoKVxyXG59XHJcblxyXG5jb25zdCBwcmVwYXJlRE9NRWxlbWVudHMgPSAoKSA9PiB7XHJcblx0b3BpbmlvbnNDYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5vcGluaW9uc19fY2FyZCcpXHJcblx0b3BpbmlvbnNQcm9ncmVzc0RvdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcub3BpbmlvbnNfX3Byb2dyZXNzLWRvdCcpXHJcblx0b3BpbmlvbnNCdG5MZWZ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm9waW5pb25zX19idG4tLWxlZnQnKVxyXG5cdG9waW5pb25zQnRuUmlnaHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub3BpbmlvbnNfX2J0bi0tcmlnaHQnKVxyXG5cdG9waW5pb25zQnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5vcGluaW9uc19fYnRuJylcclxuXHRvcGluaW9uc1NsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vcGluaW9uc19fc2xpZGVyJylcclxufVxyXG5cclxuY29uc3QgcHJlcGFyZURPTUV2ZW50cyA9ICgpID0+IHtcclxuXHRvcGluaW9uc0J0bnMuZm9yRWFjaChidG4gPT4ge1xyXG5cdFx0aWYgKGJ0bi5jbGFzc0xpc3QuY29udGFpbnMoJ29waW5pb25zX19idG4tLWxlZnQnKSkge1xyXG5cdFx0XHRidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVPcGluaW9uTGVmdFNsaWRlcilcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU9waW5pb25SaWdodFNsaWRlcilcclxuXHRcdH1cclxuXHR9KVxyXG5cdGhhbmRsZU9waW5pb25zRG90KClcclxufVxyXG5cclxuY29uc3QgaGFuZGxlT3BpbmlvbkxlZnRTbGlkZXIgPSAoKSA9PiB7XHJcblx0aGFuZGxlQWN0aXZlQ2FyZCgnbGVmdCcsIC0xKVxyXG59XHJcblxyXG5jb25zdCBoYW5kbGVPcGluaW9uUmlnaHRTbGlkZXIgPSAoKSA9PiB7XHJcblx0aGFuZGxlQWN0aXZlQ2FyZCgncmlnaHQnLCAxKVxyXG59XHJcblxyXG5jb25zdCBoYW5kbGVPcGluaW9uc0RvdCA9ICgpID0+IHtcclxuXHRvcGluaW9uc1Byb2dyZXNzRG90cy5mb3JFYWNoKGRvdCA9PiB7XHJcblx0XHRkb3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcblx0XHRcdGNvbnN0IHRhcmdldE51bWJlciA9IHBhcnNlSW50KGRvdC5kYXRhc2V0LmNhcmROdW1iZXIpXHJcblx0XHRcdGNvbnN0IGFjdGl2ZUNhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub3BpbmlvbnNfX2NhcmQtLWFjdGl2ZScpXHJcblx0XHRcdGNvbnN0IGN1cnJlbnROdW1iZXIgPSBwYXJzZUludChhY3RpdmVDYXJkLmRhdGFzZXQuY2FyZE51bWJlcilcclxuXHRcdFx0Y29uc3QgZGlmZiA9IHRhcmdldE51bWJlciAtIGN1cnJlbnROdW1iZXJcclxuXHJcblx0XHRcdGlmIChkaWZmICE9PSAwKSB7XHJcblx0XHRcdFx0aGFuZGxlQWN0aXZlQ2FyZChkaWZmID4gMCA/ICdyaWdodCcgOiAnbGVmdCcsIE1hdGguYWJzKGRpZmYpKVxyXG5cdFx0XHR9XHJcblx0XHR9KVxyXG5cdH0pXHJcbn1cclxuXHJcbmNvbnN0IGhhbmRsZUFjdGl2ZUNhcmQgPSAoZGlyZWN0aW9uLCB2YWx1ZSkgPT4ge1xyXG5cdGxldCBhY3RpdmVDYXJkID0gQXJyYXkuZnJvbShvcGluaW9uc0NhcmRzKS5maW5kKGNhcmQgPT4gY2FyZC5jbGFzc0xpc3QuY29udGFpbnMoJ29waW5pb25zX19jYXJkLS1hY3RpdmUnKSlcclxuXHJcblx0Y29uc3QgYWN0aXZlQ2FyZERhdGFzZXQgPSBhY3RpdmVDYXJkLmRhdGFzZXQuY2FyZE51bWJlclxyXG5cdGFjdGl2ZUNhcmQuY2xhc3NMaXN0LnJlbW92ZSgnb3BpbmlvbnNfX2NhcmQtLWFjdGl2ZScpXHJcblxyXG5cdGxldCBuZXdDYXJkTnVtYmVyID0gcGFyc2VJbnQoYWN0aXZlQ2FyZERhdGFzZXQpICsgdmFsdWVcclxuXHJcblx0aWYgKG5ld0NhcmROdW1iZXIgPiAzKSBuZXdDYXJkTnVtYmVyID0gMVxyXG5cdGlmIChuZXdDYXJkTnVtYmVyIDwgMSkgbmV3Q2FyZE51bWJlciA9IDNcclxuXHJcblx0Ly8gaWYgKGRpcmVjdGlvbiA9PSAncmlnaHQnKSB7XHJcblx0Ly8gXHRhY3RpdmVDYXJkLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKC0zMDBweCknXHJcblx0Ly8gfSBlbHNlIHtcclxuXHQvLyBcdGFjdGl2ZUNhcmQuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoMzAwcHgpJ1xyXG5cdC8vIH1cclxuXHJcblx0Y29uc3Qgb2Zmc2V0ID0gKG5ld0NhcmROdW1iZXIgLSAxKSAqIDMyMCAvLyBsdWIgZHluYW1pY3puaWU6IG9waW5pb25zQ2FyZHNbMF0ub2Zmc2V0V2lkdGhcclxuXHRvcGluaW9uc1NsaWRlci5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgtJHtvZmZzZXR9cHgpYFxyXG5cclxuXHRjb25zdCBuZXdBY3RpdmVDYXJkID0gQXJyYXkuZnJvbShvcGluaW9uc0NhcmRzKS5maW5kKGNhcmQgPT4gcGFyc2VJbnQoY2FyZC5kYXRhc2V0LmNhcmROdW1iZXIpID09PSBuZXdDYXJkTnVtYmVyKVxyXG5cdG5ld0FjdGl2ZUNhcmQuY2xhc3NMaXN0LmFkZCgnb3BpbmlvbnNfX2NhcmQtLWFjdGl2ZScpXHJcblxyXG5cdGNvbnN0IGFjdGl2ZURvdCA9IEFycmF5LmZyb20ob3BpbmlvbnNQcm9ncmVzc0RvdHMpLmZpbmQoXHJcblx0XHRkb3QgPT4gcGFyc2VJbnQoZG90LmRhdGFzZXQuY2FyZE51bWJlcikgPT09IHBhcnNlSW50KGFjdGl2ZUNhcmREYXRhc2V0KVxyXG5cdClcclxuXHRhY3RpdmVEb3QuY2xhc3NMaXN0LnJlbW92ZSgnb3BpbmlvbnNfX3Byb2dyZXNzLWRvdC0tYWN0aXZlJylcclxuXHJcblx0Y29uc3QgbmV3QWN0aXZlRG90ID0gQXJyYXkuZnJvbShvcGluaW9uc1Byb2dyZXNzRG90cykuZmluZChkb3QgPT4gcGFyc2VJbnQoZG90LmRhdGFzZXQuY2FyZE51bWJlcikgPT09IG5ld0NhcmROdW1iZXIpXHJcblx0bmV3QWN0aXZlRG90LmNsYXNzTGlzdC5hZGQoJ29waW5pb25zX19wcm9ncmVzcy1kb3QtLWFjdGl2ZScpXHJcbn1cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBtYWluMilcclxuIl19

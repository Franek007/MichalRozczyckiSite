var opinionsCards,opinionsProgressDots,opinionsBtnRight,opinionsBtnLeft,opinionsBtns,opinionsSlider,realizationCards,realizationBtnRight,realizationBtnLeft,realizationBtns,realizationSlider,cardWidth=320,currentIndex=0,main2=function(){prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=function(){opinionsCards=document.querySelectorAll(".opinions__card"),opinionsProgressDots=document.querySelectorAll(".opinions__progress-dot"),opinionsBtnLeft=document.querySelector(".opinions__btn--left"),opinionsBtnRight=document.querySelector(".opinions__btn--right"),opinionsBtns=document.querySelectorAll(".opinions__btn"),opinionsSlider=document.querySelector(".opinions__slider"),realizationCards=document.querySelectorAll(".realization__card"),realizationBtnRight=document.querySelector(".realization__btn--right"),realizationBtnLeft=document.querySelector(".realization__btn--left"),realizationBtns=document.querySelectorAll(".realization__btn"),realizationSlider=document.querySelector(".realization__slider")},prepareDOMEvents=function(){opinionsBtns.forEach(function(n){n.classList.contains("opinions__btn--left")?n.addEventListener("click",handleOpinionLeftSlider):n.addEventListener("click",handleOpinionRightSlider)}),handleOpinionsDot(),realizationBtns.forEach(function(n){n.classList.contains("realization__btn--left")?n.addEventListener("click",handleRealizationBtnLeftSlider):n.addEventListener("click",handleRealizationBtnRightSlider)}),handleRealizationSlider(),gsap.from(".header",{duratrion:1,y:"-100%",ease:"bounce"})},handleOpinionLeftSlider=function(){handleOpinionsSlider("left",-1)},handleOpinionRightSlider=function(){handleOpinionsSlider("right",1)},handleOpinionsDot=function(){opinionsProgressDots.forEach(function(e){e.addEventListener("click",function(){var n=parseInt(e.dataset.cardNumber),i=document.querySelector(".opinions__card--active"),n=n-parseInt(i.dataset.cardNumber);0!=n&&handleOpinionsSlider(0<n?"right":"left",Math.abs(n))})})},handleOpinionsSlider=function(n,i){var e=Array.from(opinionsCards).find(function(n){return n.classList.contains("opinions__card--active")}),t=e.dataset.cardNumber,r=(e.classList.remove("opinions__card--active"),parseInt(t)+i),e=320*((r=(r=3<r?1:r)<1?3:r)-1);opinionsSlider.style.transform="translateX(-".concat(e,"px)"),Array.from(opinionsCards).find(function(n){return parseInt(n.dataset.cardNumber)===r}).classList.add("opinions__card--active"),Array.from(opinionsProgressDots).find(function(n){return parseInt(n.dataset.cardNumber)===parseInt(t)}).classList.remove("opinions__progress-dot--active"),Array.from(opinionsProgressDots).find(function(n){return parseInt(n.dataset.cardNumber)===r}).classList.add("opinions__progress-dot--active")},handleRealizationBtnLeftSlider=function(){var n=realizationCards.length-1;currentIndex<=n&&(currentIndex--,handleRealizationSlider())},handleRealizationBtnRightSlider=function(){var n=realizationCards.length-1;currentIndex<n&&(currentIndex++,handleRealizationSlider())},handleRealizationSlider=function(){console.log(realizationCards.length);var n=realizationCards.length-1;currentIndex===n?(realizationSlider.style.transform="translateX(-".concat(280*currentIndex,"px)"),realizationBtnRight.classList.add("realization__btn--active")):(realizationSlider.style.transform="translateX(-".concat(currentIndex*cardWidth,"px)"),0===currentIndex?realizationBtnLeft.classList.add("realization__btn--active"):realizationBtnLeft.classList.remove("realization__btn--active"),n<=currentIndex?realizationBtnRight.classList.add("realization__btn--active"):realizationBtnRight.classList.remove("realization__btn--active"))};document.addEventListener("DOMContentLoaded",main2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
